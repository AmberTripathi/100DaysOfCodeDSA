class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        int sr = 0;
        int sc = 0;
        int er = m - 1;
        int ec = n - 1;

        List<Integer> list = new ArrayList<>();

        while(list.size() < matrix.length*matrix[0].length) {
            //row left to right iteration
            for(int i=sc;i<=ec && list.size()< m*n  ;i++) {
                list.add(matrix[sr][i]);
            }
            //col top to down
            for(int i=sr+1;i<=er && list.size()< m*n ;i++) {
                list.add(matrix[i][ec]);
            }
            //row right to left
            for(int i=ec-1;i>=sc && list.size()< m*n ;i--) {
                list.add(matrix[er][i]);
            }
            //column bottom to top
            for(int i=er-1;i>=sr+1 && list.size()< m*n ;i--) {
                list.add(matrix[i][sc]);
            }
            //updation
            sr++;
            sc++;
            er--;
            ec--;
        }
        return list;
        
    }
}

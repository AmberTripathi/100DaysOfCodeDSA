/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {

       ListNode head = null;   
       ListNode temp = null;
        int carryDigit = 0;
        
        while (l1 != null || l2 != null) {
            int sum = carryDigit;
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }
            
            ListNode node = new ListNode(sum % 10);
            carryDigit = sum / 10;
            
            if (temp == null) {
                temp = head = node;
            }
            
            else {
                temp.next = node;
                temp = temp.next;
            }
        }
        if (carryDigit > 0) {
            temp.next = new ListNode(carryDigit);
        }
        return head;
    }
}
